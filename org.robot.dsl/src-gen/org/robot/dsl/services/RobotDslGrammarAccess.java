/*
 * generated by Xtext 2.14.0
 */
package org.robot.dsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class RobotDslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class RobotElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.robot.dsl.RobotDsl.Robot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRobotAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRobotKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cScenarioKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cScenarioAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cScenarioScenarioParserRuleCall_4_1_0 = (RuleCall)cScenarioAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Robot:
		//	{Robot}
		//	'Robot'
		//	name=EString
		//	'{' ('scenario' scenario=Scenario)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Robot} 'Robot' name=EString '{' ('scenario' scenario=Scenario)? '}'
		public Group getGroup() { return cGroup; }
		
		//{Robot}
		public Action getRobotAction_0() { return cRobotAction_0; }
		
		//'Robot'
		public Keyword getRobotKeyword_1() { return cRobotKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('scenario' scenario=Scenario)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'scenario'
		public Keyword getScenarioKeyword_4_0() { return cScenarioKeyword_4_0; }
		
		//scenario=Scenario
		public Assignment getScenarioAssignment_4_1() { return cScenarioAssignment_4_1; }
		
		//Scenario
		public RuleCall getScenarioScenarioParserRuleCall_4_1_0() { return cScenarioScenarioParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.robot.dsl.RobotDsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class ScenarioElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.robot.dsl.RobotDsl.Scenario");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cScenarioAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cScenarioKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cStatesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cStatesAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cStatesStateParserRuleCall_4_2_0 = (RuleCall)cStatesAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cStatesAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cStatesStateParserRuleCall_4_3_1_0 = (RuleCall)cStatesAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Scenario:
		//	{Scenario}
		//	'Scenario'
		//	name=EString
		//	'{' ('states' '{' states+=State ("," states+=State)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Scenario} 'Scenario' name=EString '{' ('states' '{' states+=State ("," states+=State)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{Scenario}
		public Action getScenarioAction_0() { return cScenarioAction_0; }
		
		//'Scenario'
		public Keyword getScenarioKeyword_1() { return cScenarioKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('states' '{' states+=State ("," states+=State)* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'states'
		public Keyword getStatesKeyword_4_0() { return cStatesKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//states+=State
		public Assignment getStatesAssignment_4_2() { return cStatesAssignment_4_2; }
		
		//State
		public RuleCall getStatesStateParserRuleCall_4_2_0() { return cStatesStateParserRuleCall_4_2_0; }
		
		//("," states+=State)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//states+=State
		public Assignment getStatesAssignment_4_3_1() { return cStatesAssignment_4_3_1; }
		
		//State
		public RuleCall getStatesStateParserRuleCall_4_3_1_0() { return cStatesStateParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class StateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.robot.dsl.RobotDsl.State");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cStateAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cStateKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDestinationKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDestinationAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cDestinationActionCrossReference_4_1_0 = (CrossReference)cDestinationAssignment_4_1.eContents().get(0);
		private final RuleCall cDestinationActionEStringParserRuleCall_4_1_0_1 = (RuleCall)cDestinationActionCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cActionsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cActionsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cActionsActionParserRuleCall_5_2_0 = (RuleCall)cActionsAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cActionsAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cActionsActionParserRuleCall_5_3_1_0 = (RuleCall)cActionsAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//State:
		//	{State}
		//	'State'
		//	name=EString
		//	'{' ('destination' destination=[Action|EString])? ('actions' '{' actions+=Action ("," actions+=Action)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{State} 'State' name=EString '{' ('destination' destination=[Action|EString])? ('actions' '{' actions+=Action (","
		//actions+=Action)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{State}
		public Action getStateAction_0() { return cStateAction_0; }
		
		//'State'
		public Keyword getStateKeyword_1() { return cStateKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('destination' destination=[Action|EString])?
		public Group getGroup_4() { return cGroup_4; }
		
		//'destination'
		public Keyword getDestinationKeyword_4_0() { return cDestinationKeyword_4_0; }
		
		//destination=[Action|EString]
		public Assignment getDestinationAssignment_4_1() { return cDestinationAssignment_4_1; }
		
		//[Action|EString]
		public CrossReference getDestinationActionCrossReference_4_1_0() { return cDestinationActionCrossReference_4_1_0; }
		
		//EString
		public RuleCall getDestinationActionEStringParserRuleCall_4_1_0_1() { return cDestinationActionEStringParserRuleCall_4_1_0_1; }
		
		//('actions' '{' actions+=Action ("," actions+=Action)* '}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'actions'
		public Keyword getActionsKeyword_5_0() { return cActionsKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//actions+=Action
		public Assignment getActionsAssignment_5_2() { return cActionsAssignment_5_2; }
		
		//Action
		public RuleCall getActionsActionParserRuleCall_5_2_0() { return cActionsActionParserRuleCall_5_2_0; }
		
		//("," actions+=Action)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//actions+=Action
		public Assignment getActionsAssignment_5_3_1() { return cActionsAssignment_5_3_1; }
		
		//Action
		public RuleCall getActionsActionParserRuleCall_5_3_1_0() { return cActionsActionParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class ActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.robot.dsl.RobotDsl.Action");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cActionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cActionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//Action:
		//	{Action}
		//	'Action'
		//	name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{Action} 'Action' name=EString
		public Group getGroup() { return cGroup; }
		
		//{Action}
		public Action getActionAction_0() { return cActionAction_0; }
		
		//'Action'
		public Keyword getActionKeyword_1() { return cActionKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
	}
	
	
	private final RobotElements pRobot;
	private final EStringElements pEString;
	private final ScenarioElements pScenario;
	private final StateElements pState;
	private final ActionElements pAction;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public RobotDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pRobot = new RobotElements();
		this.pEString = new EStringElements();
		this.pScenario = new ScenarioElements();
		this.pState = new StateElements();
		this.pAction = new ActionElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.robot.dsl.RobotDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Robot:
	//	{Robot}
	//	'Robot'
	//	name=EString
	//	'{' ('scenario' scenario=Scenario)?
	//	'}';
	public RobotElements getRobotAccess() {
		return pRobot;
	}
	
	public ParserRule getRobotRule() {
		return getRobotAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Scenario:
	//	{Scenario}
	//	'Scenario'
	//	name=EString
	//	'{' ('states' '{' states+=State ("," states+=State)* '}')?
	//	'}';
	public ScenarioElements getScenarioAccess() {
		return pScenario;
	}
	
	public ParserRule getScenarioRule() {
		return getScenarioAccess().getRule();
	}
	
	//State:
	//	{State}
	//	'State'
	//	name=EString
	//	'{' ('destination' destination=[Action|EString])? ('actions' '{' actions+=Action ("," actions+=Action)* '}')?
	//	'}';
	public StateElements getStateAccess() {
		return pState;
	}
	
	public ParserRule getStateRule() {
		return getStateAccess().getRule();
	}
	
	//Action:
	//	{Action}
	//	'Action'
	//	name=EString;
	public ActionElements getActionAccess() {
		return pAction;
	}
	
	public ParserRule getActionRule() {
		return getActionAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
