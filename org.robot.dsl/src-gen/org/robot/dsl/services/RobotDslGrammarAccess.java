/*
 * generated by Xtext 2.14.0
 */
package org.robot.dsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class RobotDslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class RobotElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.robot.dsl.RobotDsl.Robot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRobotKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cScenariiKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cScenariiAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cScenariiScenarioParserRuleCall_3_2_0 = (RuleCall)cScenariiAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cScenariiAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cScenariiScenarioParserRuleCall_3_3_1_0 = (RuleCall)cScenariiAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cGlobalKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cGlobalAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cGlobalScenarioParserRuleCall_5_0 = (RuleCall)cGlobalAssignment_5.eContents().get(0);
		private final Keyword cInitialKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cInitialAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cInitialScenarioCrossReference_7_0 = (CrossReference)cInitialAssignment_7.eContents().get(0);
		private final RuleCall cInitialScenarioEStringParserRuleCall_7_0_1 = (RuleCall)cInitialScenarioCrossReference_7_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Robot:
		//	'Robot'
		//	name=EString
		//	'{' ('scenarii' '{' scenarii+=Scenario ("," scenarii+=Scenario)* '}')?
		//	'global' global=Scenario
		//	'initial' initial=[Scenario|EString]
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Robot' name=EString '{' ('scenarii' '{' scenarii+=Scenario ("," scenarii+=Scenario)* '}')? 'global' global=Scenario
		//'initial' initial=[Scenario|EString] '}'
		public Group getGroup() { return cGroup; }
		
		//'Robot'
		public Keyword getRobotKeyword_0() { return cRobotKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('scenarii' '{' scenarii+=Scenario ("," scenarii+=Scenario)* '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'scenarii'
		public Keyword getScenariiKeyword_3_0() { return cScenariiKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//scenarii+=Scenario
		public Assignment getScenariiAssignment_3_2() { return cScenariiAssignment_3_2; }
		
		//Scenario
		public RuleCall getScenariiScenarioParserRuleCall_3_2_0() { return cScenariiScenarioParserRuleCall_3_2_0; }
		
		//("," scenarii+=Scenario)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//scenarii+=Scenario
		public Assignment getScenariiAssignment_3_3_1() { return cScenariiAssignment_3_3_1; }
		
		//Scenario
		public RuleCall getScenariiScenarioParserRuleCall_3_3_1_0() { return cScenariiScenarioParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//'global'
		public Keyword getGlobalKeyword_4() { return cGlobalKeyword_4; }
		
		//global=Scenario
		public Assignment getGlobalAssignment_5() { return cGlobalAssignment_5; }
		
		//Scenario
		public RuleCall getGlobalScenarioParserRuleCall_5_0() { return cGlobalScenarioParserRuleCall_5_0; }
		
		//'initial'
		public Keyword getInitialKeyword_6() { return cInitialKeyword_6; }
		
		//initial=[Scenario|EString]
		public Assignment getInitialAssignment_7() { return cInitialAssignment_7; }
		
		//[Scenario|EString]
		public CrossReference getInitialScenarioCrossReference_7_0() { return cInitialScenarioCrossReference_7_0; }
		
		//EString
		public RuleCall getInitialScenarioEStringParserRuleCall_7_0_1() { return cInitialScenarioEStringParserRuleCall_7_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class StatementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.robot.dsl.RobotDsl.Statement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cForwardStatementParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cExecuteStatementParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cPrintStatementParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Statement:
		//	ForwardStatement | ExecuteStatement | PrintStatement;
		@Override public ParserRule getRule() { return rule; }
		
		//ForwardStatement | ExecuteStatement | PrintStatement
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ForwardStatement
		public RuleCall getForwardStatementParserRuleCall_0() { return cForwardStatementParserRuleCall_0; }
		
		//ExecuteStatement
		public RuleCall getExecuteStatementParserRuleCall_1() { return cExecuteStatementParserRuleCall_1; }
		
		//PrintStatement
		public RuleCall getPrintStatementParserRuleCall_2() { return cPrintStatementParserRuleCall_2; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.robot.dsl.RobotDsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class ScenarioElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.robot.dsl.RobotDsl.Scenario");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cScenarioAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cScenarioKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cStatementsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cStatementsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cStatementsStatementParserRuleCall_4_2_0 = (RuleCall)cStatementsAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cStatementsAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cStatementsStatementParserRuleCall_4_3_1_0 = (RuleCall)cStatementsAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Scenario:
		//	{Scenario}
		//	'Scenario'
		//	name=EString
		//	'{' ('statements' '{' statements+=Statement ("," statements+=Statement)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Scenario} 'Scenario' name=EString '{' ('statements' '{' statements+=Statement ("," statements+=Statement)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{Scenario}
		public Action getScenarioAction_0() { return cScenarioAction_0; }
		
		//'Scenario'
		public Keyword getScenarioKeyword_1() { return cScenarioKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('statements' '{' statements+=Statement ("," statements+=Statement)* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'statements'
		public Keyword getStatementsKeyword_4_0() { return cStatementsKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//statements+=Statement
		public Assignment getStatementsAssignment_4_2() { return cStatementsAssignment_4_2; }
		
		//Statement
		public RuleCall getStatementsStatementParserRuleCall_4_2_0() { return cStatementsStatementParserRuleCall_4_2_0; }
		
		//("," statements+=Statement)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//statements+=Statement
		public Assignment getStatementsAssignment_4_3_1() { return cStatementsAssignment_4_3_1; }
		
		//Statement
		public RuleCall getStatementsStatementParserRuleCall_4_3_1_0() { return cStatementsStatementParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class ForwardStatementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.robot.dsl.RobotDsl.ForwardStatement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cForwardStatementAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cForwardKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//ForwardStatement:
		//	{ForwardStatement}
		//	'forward';
		@Override public ParserRule getRule() { return rule; }
		
		//{ForwardStatement} 'forward'
		public Group getGroup() { return cGroup; }
		
		//{ForwardStatement}
		public Action getForwardStatementAction_0() { return cForwardStatementAction_0; }
		
		//'forward'
		public Keyword getForwardKeyword_1() { return cForwardKeyword_1; }
	}
	public class PrintStatementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.robot.dsl.RobotDsl.PrintStatement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPrintStatementAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPrintKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTextAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTextEStringParserRuleCall_2_0 = (RuleCall)cTextAssignment_2.eContents().get(0);
		
		//PrintStatement:
		//	{PrintStatement}
		//	'print' text=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{PrintStatement} 'print' text=EString
		public Group getGroup() { return cGroup; }
		
		//{PrintStatement}
		public Action getPrintStatementAction_0() { return cPrintStatementAction_0; }
		
		//'print'
		public Keyword getPrintKeyword_1() { return cPrintKeyword_1; }
		
		//text=EString
		public Assignment getTextAssignment_2() { return cTextAssignment_2; }
		
		//EString
		public RuleCall getTextEStringParserRuleCall_2_0() { return cTextEStringParserRuleCall_2_0; }
	}
	public class ExecuteStatementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.robot.dsl.RobotDsl.ExecuteStatement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cExecuteStatementAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cExecuteKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDestinationAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cDestinationScenarioCrossReference_2_0 = (CrossReference)cDestinationAssignment_2.eContents().get(0);
		private final RuleCall cDestinationScenarioEStringParserRuleCall_2_0_1 = (RuleCall)cDestinationScenarioCrossReference_2_0.eContents().get(1);
		
		//ExecuteStatement:
		//	{ExecuteStatement}
		//	'execute' destination=[Scenario|EString];
		@Override public ParserRule getRule() { return rule; }
		
		//{ExecuteStatement} 'execute' destination=[Scenario|EString]
		public Group getGroup() { return cGroup; }
		
		//{ExecuteStatement}
		public Action getExecuteStatementAction_0() { return cExecuteStatementAction_0; }
		
		//'execute'
		public Keyword getExecuteKeyword_1() { return cExecuteKeyword_1; }
		
		//destination=[Scenario|EString]
		public Assignment getDestinationAssignment_2() { return cDestinationAssignment_2; }
		
		//[Scenario|EString]
		public CrossReference getDestinationScenarioCrossReference_2_0() { return cDestinationScenarioCrossReference_2_0; }
		
		//EString
		public RuleCall getDestinationScenarioEStringParserRuleCall_2_0_1() { return cDestinationScenarioEStringParserRuleCall_2_0_1; }
	}
	
	
	private final RobotElements pRobot;
	private final StatementElements pStatement;
	private final EStringElements pEString;
	private final ScenarioElements pScenario;
	private final ForwardStatementElements pForwardStatement;
	private final PrintStatementElements pPrintStatement;
	private final ExecuteStatementElements pExecuteStatement;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public RobotDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pRobot = new RobotElements();
		this.pStatement = new StatementElements();
		this.pEString = new EStringElements();
		this.pScenario = new ScenarioElements();
		this.pForwardStatement = new ForwardStatementElements();
		this.pPrintStatement = new PrintStatementElements();
		this.pExecuteStatement = new ExecuteStatementElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.robot.dsl.RobotDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Robot:
	//	'Robot'
	//	name=EString
	//	'{' ('scenarii' '{' scenarii+=Scenario ("," scenarii+=Scenario)* '}')?
	//	'global' global=Scenario
	//	'initial' initial=[Scenario|EString]
	//	'}';
	public RobotElements getRobotAccess() {
		return pRobot;
	}
	
	public ParserRule getRobotRule() {
		return getRobotAccess().getRule();
	}
	
	//Statement:
	//	ForwardStatement | ExecuteStatement | PrintStatement;
	public StatementElements getStatementAccess() {
		return pStatement;
	}
	
	public ParserRule getStatementRule() {
		return getStatementAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Scenario:
	//	{Scenario}
	//	'Scenario'
	//	name=EString
	//	'{' ('statements' '{' statements+=Statement ("," statements+=Statement)* '}')?
	//	'}';
	public ScenarioElements getScenarioAccess() {
		return pScenario;
	}
	
	public ParserRule getScenarioRule() {
		return getScenarioAccess().getRule();
	}
	
	//ForwardStatement:
	//	{ForwardStatement}
	//	'forward';
	public ForwardStatementElements getForwardStatementAccess() {
		return pForwardStatement;
	}
	
	public ParserRule getForwardStatementRule() {
		return getForwardStatementAccess().getRule();
	}
	
	//PrintStatement:
	//	{PrintStatement}
	//	'print' text=EString;
	public PrintStatementElements getPrintStatementAccess() {
		return pPrintStatement;
	}
	
	public ParserRule getPrintStatementRule() {
		return getPrintStatementAccess().getRule();
	}
	
	//ExecuteStatement:
	//	{ExecuteStatement}
	//	'execute' destination=[Scenario|EString];
	public ExecuteStatementElements getExecuteStatementAccess() {
		return pExecuteStatement;
	}
	
	public ParserRule getExecuteStatementRule() {
		return getExecuteStatementAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
