// automatically generated by Xtext
grammar org.robot.dsl.RobotDsl with org.eclipse.xtext.common.Terminals

import "http://org/robot"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Robot returns Robot:
	'Robot'
	name=EString
	'{'
		( 'connect_to' connection=Connection )?
		('scenarii' '{' scenarii+=Scenario ( scenarii+=Scenario)* '}' )?
		'global' global=Scenario
		'initial' initial=[Scenario | EString]
	'}';

EString returns ecore::EString:
	STRING | ID;

Connection returns Connection:
	{Connection}
	ip=EString ':' port=INT
;

Scenario returns Scenario:
	{Scenario}
	'Scenario'
	name=EString
	'{'
		(statements+=Statement (statements+=Statement)*)?
	'}';

Condition returns Condition:
	BallAheadCondition;

BallAheadCondition returns BallAheadCondition:
	{BallAheadCondition}
	'ball_ahead'
	;


Statement returns Statement:
	ForwardStatement | ExecuteStatement | PrintStatement | ConditionalStatement;

ForwardStatement returns ForwardStatement:
	{ForwardStatement}
	'forward'
	;

PrintStatement returns PrintStatement:
	{PrintStatement}
	'print' text=EString
	;
	
ExecuteStatement returns ExecuteStatement:
	{ExecuteStatement}
	'execute' destination=[Scenario | EString]
	;

ConditionalStatement returns ConditionalStatement:
	UntilStatement
;

UntilStatement returns UntilStatement:
	{UntilStatement}
	'until' condition=Condition
	'{'
		statements+=Statement (statements+=Statement)*
	'}';






